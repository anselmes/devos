name: Build Workflow
description: Workflow for building images

inputs:
  build-container-image:
    default: "false"
    description: Build container images
  container-image-build-args:
    description: Container image build args
  container-image-context:
    default: .
    description: Container image context
  container-image-custom-tag:
    description: Container image custom tag
  container-image-file:
    description: Container image file
  container-image-name:
    description: Container image name
  container-image-platforms:
    default: linux/amd64,linux/arm64
    description: Container image platforms
  container-image-repo-password:
    description: Container image repository password
  container-image-repo-username:
    description: Container image repository username
  container-image-repo:
    default: ghcr.io
    description: Container image repository
  push-container-image:
    default: "false"
    description: Push container images

runs:
  using: composite
  steps:
    # todo: setup cosign
    - name: Set up QEMU
      uses: docker/setup-qemu-action@49b3bc8e6bdd4a60e6116a5414239cba5943d3cf # v3.2.0 https://github.com/docker/setup-qemu-action/commit/49b3bc8e6bdd4a60e6116a5414239cba5943d3cf
      if: ${{ inputs.build-container-image == 'true' }}
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@988b5a0280414f521da01fcc63a27aeeb4b104db # v3.6.1 https://github.com/docker/setup-buildx-action/commit/988b5a0280414f521da01fcc63a27aeeb4b104db
      if: ${{ inputs.build-container-image == 'true' }}
    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@8e5442c4ef9f78752691e2d8f8d19755c6f78e81 # v5.5.1 https://github.com/docker/metadata-action/commit/8e5442c4ef9f78752691e2d8f8d19755c6f78e81
      if: ${{ inputs.build-container-image == 'true' }}
      with:
        # images: ${{ inputs.container-image-repo }}/${{ inputs.container-image-repo-username }}/${{ inputs.container-image-name }}
        images: ghcr.io/sanselme/devcontainer
        labels: |
          org.opencontainers.image.title=${{ inputs.container-image-name }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=semver,pattern={{major}}
          type=semver,pattern={{major}}.{{minor}}
          type=semver,pattern={{version}}
    - name: Login to Container Registry
      uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 # v3.3.0 https://github.com/docker/login-action/commit/9780b0c442fbb1117ed29e0efdff1e18412f7567
      if: ${{ inputs.build-container-image == 'true' && inputs.push-container-image == 'true' }}
      with:
        registry: ${{ inputs.container-image-repo }}
        username: ${{ github.repository_owner }}
        password: ${{ inputs.container-image-repo-password }}
    - name: Build and push
      id: build
      uses: docker/build-push-action@5cd11c3a4ced054e52742c5fd54dca954e0edd85 # v6.7.0 https://github.com/docker/build-push-action/commit/5cd11c3a4ced054e52742c5fd54dca954e0edd85
      if: ${{ inputs.build-container-image == 'true' }}
      with:
        context: ${{ inputs.container-image-context }}
        file: ${{ inputs.container-image-file }}
        push: ${{ inputs.push-container-image }}
        sbom: true
        annotations: ${{ steps.meta.outputs.labels }}
        build-args: ${{ inputs.container-image-build-args }}
        labels: ${{ steps.meta.outputs.labels }}
        provenance: true
        tags: ${{ steps.meta.outputs.tags }} # todo: ,${{ inputs.container-image-repo }}/${{ inputs.container-image-repo-username }}/${{ inputs.container-image-custom-tag }}
        platforms: ${{ inputs.container-image-platforms }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
    - name: Attest Build Provenance
      uses: actions/attest-build-provenance@1c608d11d69870c2092266b3f9a6f3abbf17002c # v1.4.3 https://github.com/actions/attest-build-provenance/commit/1c608d11d69870c2092266b3f9a6f3abbf17002c
      if: ${{ github.ref == 'refs/heads/main' && github.event_name == 'push' }}
      with:
        subject-name: ${{ steps.build.outputs.metadata.image.name }} #${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        push-to-registry: true
        subject-digest: ${{ steps.build.outputs.digest }}
        # subject-path: ${{ inputs.container-image-file }}
